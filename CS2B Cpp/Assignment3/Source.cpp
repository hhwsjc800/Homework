#include <iostream>
#include <string>
#include <iomanip>
#include <bitset>

using namespace std;

class Automaton
{
private:
   static const int RULES_SIZE = 8;
   static const long long int MAX_RULE = 255; // 2^32 - 1
   static const int DEFAULT_DISPLAY_WIDTH = 79;
   
   bool rules[RULES_SIZE];
   string thisGen;
   string extremeBit; // bit, "*" or " ", implied everywhere "outside"
   int displayWidth;  // an odd number so it can be perfectly centered

public:
   static const int MAX_DISPLAY_WIDTH = 121;

   string copyGen;
   Automaton(long long int rule);
   string toStringCurrentGen() const;
   bool setRule(long long int newRule);// change rule set
   void resetFirstGen();
   bool setDisplayWidth(int width);
   void propagateNewGeneration();
};

//////////////////////////////////
//                              //
// AUTOMATON CLASS DEFINITIONS  //
//                              //
/////////////////////////////////

Automaton::Automaton(long long int rule = 0)
{
   if (setRule(rule))
      displayWidth = DEFAULT_DISPLAY_WIDTH;

   resetFirstGen();
}

bool Automaton::setRule(long long int newRule)
{
   if (newRule > MAX_RULE || newRule < 0)
      return false;

   for (int i = 0; i < RULES_SIZE; i++)
   {
      if ((newRule >> i) & 1 == 1)
         rules[i] = true;
      else 
         rules[i] = false;
   }


   return true;
}

bool Automaton::setDisplayWidth(int width)
{
   if (width < 0 || width > MAX_DISPLAY_WIDTH || (width % 2 == 0) )
      return false;

   displayWidth = width;
   return true;
}

void Automaton::resetFirstGen()
{
   extremeBit = "0";
   thisGen = "1";
   copyGen = thisGen;
}

void Automaton::propagateNewGeneration()
{
   string nextGen, temp;
   int decVal = 0;
   //padding for thisGen
   thisGen += extremeBit + extremeBit;
   thisGen = extremeBit + extremeBit + 
             thisGen;

   //Creates nextGen
   for (int i = 0; i < thisGen.length() - 2; i++)
   {
      temp = thisGen.substr(i, 3);
      decVal = 0;
      for (int k = temp.length() - 1; k >= 0; k--)
      {
         if (temp[k] == '1')
         {
            switch (k)
            {
            case 0: 
               decVal += 4;
               break;
            case 1: 
               decVal += 2;
               break;
            case 2: 
               decVal += 1;
               break;
            }
         }
      }

      if (rules[decVal])
         nextGen += "1";
      else
         nextGen += "0";
   }
   thisGen = nextGen;

   //////////////
   copyGen = nextGen;
   //////////////

   //calculate new extremeBit
   if ((extremeBit == "1") && rules[RULES_SIZE - 1]) //extremeBit surrounding
      extremeBit = "1";
   else if ((extremeBit == "0") && rules[0])
      extremeBit = "1";
   else
      extremeBit = "0";
}

string Automaton::toStringCurrentGen() const
{
   string returnString;
   int distance, size;
   returnString = thisGen;
   size = returnString.length();
   while (returnString.length() != displayWidth)
   {
      if (returnString.length() < displayWidth)
      {
         returnString += extremeBit;
         returnString = extremeBit + returnString;
      }

      if (size > displayWidth)
      {
         distance = (size - displayWidth) / 2;
         returnString = returnString.substr(distance, displayWidth);
      }
   }
   return returnString;
}
int main()
{
   struct Test {
      bool assigned = false;
      bool value = false;
   };

   
   long long int rule, k = 0;

   // get rule from user
   do
   {
      cout << "Enter Rule (0 - 4294967295): ";
      cin >> rule;
   } while (rule < 0 || rule > 255);

   // create automaton with this rule and single central dot
   Automaton 
      aut(rule);

   string testGen, blank, copy, temp;
   blank = "0";
   Test tester[32];
   bool contradiction = false;
   int assCount = 0, decVal = 0;

   for (int i = 0; i < 32; i++) {
      tester[i].assigned = false;
      tester[i].value = false;
   }

   // now show it
   cout << "   start"  << endl;
   while (k < 100 && assCount < 32 && (contradiction == false))
   {
//      cout << "\n============\nGeneration " << k + 1 << " --> " << k + 2;

      testGen = aut.copyGen;
//      cout << "\n\nCurrent Generation: \n" << testGen << endl;
      aut.propagateNewGeneration();
      copy = aut.copyGen;
      testGen += blank + blank + blank;
      testGen = blank + blank + blank + testGen;
//      cout << "\nIt is necessary for us to have: " << endl << copy;
//      cout << endl << "for the " << k + 2 << "th generation of the 32-space set.";

//      cout << "\n\nThe current rules must be true by previous mappings: \n\n";
//      for (int i = 0; i < 32; i++) {
 //        if (tester[i].value == true)
  //          cout << i << " , ";
   //   }
  //    cout << endl;


   //   cout << "\n\n Current generation with padding: \n" << testGen << endl << endl;

     // cout << "We read the five bit sequences in order: \n";
      for (int i = 0; i < testGen.length() - 4; i++) {
         decVal = 0;
         temp = testGen.substr(i, 5);
   //      cout << temp << "----> ";
         for (int j = temp.length() - 1; j >= 0; j--) {
            if (temp[j] == '1') {
               switch (j) {
               case 0:
                  decVal += 16;
                  break;
               case 1:
                  decVal += 8;
                  break;
               case 2:
                  decVal += 4;
                  break;
               case 3:
                  decVal += 2;
                  break;
               case 4:
                  decVal += 1;
                  break;
               default:
                  break;
               }
            }
         }
     //    cout << decVal << " in decimal ---> maps to ";
    //     if (copy[i] == '1')
    //        cout << "TRUE";
    //     else
   //         cout << "FALSE";
   //      cout << endl;
         if (tester[decVal].assigned == true) {
            if ((copy[i] == '1' && tester[decVal].value == false )|| (copy[i] == '0' && tester[decVal].value == true)) {
               cout << "contradiction found";
               cout << "Rule number " << decVal << " found a contradiction";
               contradiction = true;
               break;
            }
         }
         else if (copy[i] == '1') {
          //  cout << decVal << " is assigned TRUE" << endl;
            tester[decVal].assigned = true;
            tester[decVal].value = true;
            assCount++;
         }
         else {
     //       cout << decVal << " is assigned FALSE" << endl;
            tester[decVal].assigned = true;
            tester[decVal].value = false;
            assCount++;
         }
         
      }
      k++;
   }
   
   cout << "went through " << k << " generations";
   string toDecimal;
   unsigned long long value = 0;
   if (assCount == 32) {
      cout << "arr completed! here is your binary value: " << endl;
      for (int i = 31; i >= 0; i--) {
         if (tester[i].value) {
            cout << "1 ";
            toDecimal += "1";
         }
         else {
            cout << "0 ";
            toDecimal += "0";
         }
         if (i % 4 == 0)
            cout << " / ";
      }
      cout << endl << endl;
      value = bitset<64>(toDecimal).to_ullong();
      cout << "As a decimal: " << value;

      int bar;
      cin >> bar;
      return 0;
   }

   if (contradiction) {
      cout << "contradiction found ";
   }
   else {
      cout << "Didn't fully assign values, but here is the binary number after 100 tests: \n";
      for (int i = 31; i >= 0; i--) {
         if (tester[i].value) {
            cout << "1 ";
            toDecimal += "1";
         }
         else {
            cout << "0 ";
            toDecimal += "0";
         }
                  if (i % 4 == 0)
            cout << " / ";
      }
      cout << endl << endl;
      value = bitset<64>(toDecimal).to_ullong();
      cout << "As a decimal: " << value;
   }

   int foo;
   cin >> foo;
   return 0;
}

/*
======Run of Assignment======
//////////'Small Ruleset' 4 //////////
Enter Rule (0 - 4294967295): 4
   start
                                        *
                                         *
                                          *
                                           *
                                            *
                                             *
                                              *
                                               *
                                                *
                                                 *
                                                  *
                                                   *
                                                    *
                                                     *
                                                      *
                                                       *
                                                        *
                                                         *
                                                          *
                                                           *
                                                            *
                                                             *
                                                              *
                                                               *
                                                                *
                                                                 *
                                                                  *
                                                                   *
                                                                    *
                                                                     *
                                                                      *
                                                                       *
                                                                        *
                                                                         *
                                                                          *
                                                                           *
                                                                            *
                                                                             *
                                                                              *





























































   end




//////////'Small Ruleset' 126 //////////

Enter Rule (0 - 4294967295): 126
   start
                                        *
                                        ***
                                           **
                                            ***
                                               **
                                                ***
                                                   **
                                                    ***
                                                       **
                                                        ***
                                                           **
                                                            ***
                                                               **
                                                                ***
                                                                   **
                                                                    ***
                                                                       **
                                                                        ***
                                                                           **
                                                                            ***
















































































   end



//////////'Small Ruleset' 131 //////////
Enter Rule (0 - 4294967295): 131
   start
                                        *
**************************************    *************************************
                                     * *
***********************************      **************************************
                                  * ***
********************************      * **************************************
                               * ***                                         *
*****************************      * **************************************
                            * ***                                         * ***
**************************      * **************************************      *
                         * ***                                         * ***
***********************      * **************************************      * **
                      * ***                                         * ***
********************      * **************************************      * ***
                   * ***                                         * ***      * *
*****************      * **************************************      * ***
                * ***                                         * ***      * ***
**************      * **************************************      * ***      *
             * ***                                         * ***      * ***
***********      * **************************************      * ***      * ***
          * ***                                         * ***      * ***      *
********      * **************************************      * ***      * ***
       * ***                                         * ***      * ***      * **
*****      * **************************************      * ***      * ***
    * ***                                         * ***      * ***      * ***
**      * **************************************      * ***      * ***      * *
 * ***                                         * ***      * ***      * ***
     * **************************************      * ***      * ***      * ***
***                                         * ***      * ***      * ***      *
  * **************************************      * ***      * ***      * ***
                                         * ***      * ***      * ***      * ***
 **************************************      * ***      * ***      * ***      *
                                      * ***      * ***      * ***      * ***
************************************      * ***      * ***      * ***      * **
                                   * ***      * ***      * ***      * ***
*********************************      * ***      * ***      * ***      * ***
                                * ***      * ***      * ***      * ***      * *
******************************      * ***      * ***      * ***      * ***
                             * ***      * ***      * ***      * ***      * ***
***************************      * ***      * ***      * ***      * ***      *
                          * ***      * ***      * ***      * ***      * ***
************************      * ***      * ***      * ***      * ***      * ***
                       * ***      * ***      * ***      * ***      * ***      *
*********************      * ***      * ***      * ***      * ***      * ***
                    * ***      * ***      * ***      * ***      * ***      * **
******************      * ***      * ***      * ***      * ***      * ***
                 * ***      * ***      * ***      * ***      * ***      * ***
***************      * ***      * ***      * ***      * ***      * ***      * *
              * ***      * ***      * ***      * ***      * ***      * ***
************      * ***      * ***      * ***      * ***      * ***      * ***
           * ***      * ***      * ***      * ***      * ***      * ***      *
*********      * ***      * ***      * ***      * ***      * ***      * ***
        * ***      * ***      * ***      * ***      * ***      * ***      * ***
******      * ***      * ***      * ***      * ***      * ***      * ***      *
     * ***      * ***      * ***      * ***      * ***      * ***      * ***
***      * ***      * ***      * ***      * ***      * ***      * ***      * **
  * ***      * ***      * ***      * ***      * ***      * ***      * ***
      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 ***      * ***      * ***      * ***      * ***      * ***      * ***      * *
   * ***      * ***      * ***      * ***      * ***      * ***      * ***
*      * ***      * ***      * ***      * ***      * ***      * ***      * ***
* ***      * ***      * ***      * ***      * ***      * ***      * ***      *
    * ***      * ***      * ***      * ***      * ***      * ***      * ***
**      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 * ***      * ***      * ***      * ***      * ***      * ***      * ***      *
     * ***      * ***      * ***      * ***      * ***      * ***      * ***
***      * ***      * ***      * ***      * ***      * ***      * ***      * **
  * ***      * ***      * ***      * ***      * ***      * ***      * ***
      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 ***      * ***      * ***      * ***      * ***      * ***      * ***      * *
   * ***      * ***      * ***      * ***      * ***      * ***      * ***
*      * ***      * ***      * ***      * ***      * ***      * ***      * ***
* ***      * ***      * ***      * ***      * ***      * ***      * ***      *
    * ***      * ***      * ***      * ***      * ***      * ***      * ***
**      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 * ***      * ***      * ***      * ***      * ***      * ***      * ***      *
     * ***      * ***      * ***      * ***      * ***      * ***      * ***
***      * ***      * ***      * ***      * ***      * ***      * ***      * **
  * ***      * ***      * ***      * ***      * ***      * ***      * ***
      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 ***      * ***      * ***      * ***      * ***      * ***      * ***      * *
   * ***      * ***      * ***      * ***      * ***      * ***      * ***
*      * ***      * ***      * ***      * ***      * ***      * ***      * ***
* ***      * ***      * ***      * ***      * ***      * ***      * ***      *
    * ***      * ***      * ***      * ***      * ***      * ***      * ***
**      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 * ***      * ***      * ***      * ***      * ***      * ***      * ***      *
     * ***      * ***      * ***      * ***      * ***      * ***      * ***
***      * ***      * ***      * ***      * ***      * ***      * ***      * **
  * ***      * ***      * ***      * ***      * ***      * ***      * ***
      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 ***      * ***      * ***      * ***      * ***      * ***      * ***      * *
   * ***      * ***      * ***      * ***      * ***      * ***      * ***
*      * ***      * ***      * ***      * ***      * ***      * ***      * ***
* ***      * ***      * ***      * ***      * ***      * ***      * ***      *
    * ***      * ***      * ***      * ***      * ***      * ***      * ***
**      * ***      * ***      * ***      * ***      * ***      * ***      * ***
 * ***      * ***      * ***      * ***      * ***      * ***      * ***      *
     * ***      * ***      * ***      * ***      * ***      * ***      * ***
***      * ***      * ***      * ***      * ***      * ***      * ***      * **
   end



///////Seed 41151335//////////
Enter Rule (0 - 4294967295): 4151335
   start
                                        *
***************************************  **************************************
                                       *
**************************************  ***************************************
                                      *
*************************************  ****************************************
                                     *
************************************  *****************************************
                                    *
***********************************  ******************************************
                                   *
**********************************  *******************************************
                                  *
*********************************  *******************************************
                                 *                                            *
********************************  ******************************************* *
                                *                                            **
*******************************  *******************************************  *
                               *                                            *
******************************  *******************************************  *
                              *                                            *  *
*****************************  *******************************************  *
                             *                                            *  *
****************************  *******************************************  *  *
                            *                                            *  *
***************************  *******************************************  *  **
                           *                                            *  *
**************************  *******************************************  *  ***
                          *                                            *  *
*************************  *******************************************  *  ****
                         *                                            *  *
************************  *******************************************  *  *****
                        *                                            *  *
***********************  *******************************************  *  *****
                       *                                            *  *      *
**********************  *******************************************  *  *****
                      *                                            *  *      *
*********************  *******************************************  *  *****  *
                     *                                            *  *      *
********************  *******************************************  *  *****  *
                    *                                            *  *      *  *
*******************  *******************************************  *  *****  *
                   *                                            *  *      *  *
******************  *******************************************  *  *****  *  *
                  *                                            *  *      *  *
*****************  *******************************************  *  *****  *  *
                 *                                            *  *      *  *  *
****************  *******************************************  *  *****  *  *
                *                                            *  *      *  *  *
***************  *******************************************  *  *****  *  *  *
               *                                            *  *      *  *  *
**************  *******************************************  *  *****  *  *  *
              *                                            *  *      *  *  *  *
*************  *******************************************  *  *****  *  *  *
             *                                            *  *      *  *  *  **
************  *******************************************  *  *****  *  *  *
            *                                            *  *      *  *  *  ***
***********  *******************************************  *  *****  *  *  *
           *                                            *  *      *  *  *  ****
**********  *******************************************  *  *****  *  *  *
          *                                            *  *      *  *  *  *****
*********  *******************************************  *  *****  *  *  *
         *                                            *  *      *  *  *  *****
********  *******************************************  *  *****  *  *  *      *
        *                                            *  *      *  *  *  *****
*******  *******************************************  *  *****  *  *  *      *
       *                                            *  *      *  *  *  *****  *
******  *******************************************  *  *****  *  *  *      *
      *                                            *  *      *  *  *  *****  *
*****  *******************************************  *  *****  *  *  *      *  *
     *                                            *  *      *  *  *  *****  *
****  *******************************************  *  *****  *  *  *      *  *
    *                                            *  *      *  *  *  *****  *  *
***  *******************************************  *  *****  *  *  *      *  *
   *                                            *  *      *  *  *  *****  *  **
**  *******************************************  *  *****  *  *  *      *  *
  *                                            *  *      *  *  *  *****  *  ***
*  *******************************************  *  *****  *  *  *      *  *
 *                                            *  *      *  *  *  *****  *  ****
  *******************************************  *  *****  *  *  *      *  *
*                                            *  *      *  *  *  *****  *  *****
 *******************************************  *  *****  *  *  *      *  *
                                            *  *      *  *  *  *****  *  *****
*******************************************  *  *****  *  *  *      *  *      *
                                           *  *      *  *  *  *****  *  *****
******************************************  *  *****  *  *  *      *  *      *
                                          *  *      *  *  *  *****  *  *****  *
*****************************************  *  *****  *  *  *      *  *      *
                                         *  *      *  *  *  *****  *  *****  *
****************************************  *  *****  *  *  *      *  *      *  *
                                        *  *      *  *  *  *****  *  *****  *
***************************************  *  *****  *  *  *      *  *      *  *
                                       *  *      *  *  *  *****  *  *****  *  *
**************************************  *  *****  *  *  *      *  *      *  *
                                      *  *      *  *  *  *****  *  *****  *  **
*************************************  *  *****  *  *  *      *  *      *  *
                                     *  *      *  *  *  *****  *  *****  *  ***
************************************  *  *****  *  *  *      *  *      *  *
                                    *  *      *  *  *  *****  *  *****  *  ****
***********************************  *  *****  *  *  *      *  *      *  *
   end

//seed 8882227666//////////

Enter Rule (0 - 4294967295): 888222666
   start
                                        *
                                      **  *
                                    * ** *  *
                                  ******   *  *
                                * *    ** *  *  *
                              ***   ** **   *  *  *
                            * * **  ** *** *  *  *  *
                          *** ****  ** * *   *  *  *  *
                        * * * *  *  ** *    *  *  *  *  *
                      *** * *   *   **   ***  *  *  *  *  *
                    * * * *    *    ***  * * *  *  *  *  *  *
                  *** * *   ***  ** * * ** *   *  *  *  *  *  *
                * * * *     * *  ** * ****    *  *  *  *  *  *  *
              *** * *   * ***    ** ***  *****  *  *  *  *  *  *  *
            * * * *    **** **** ** * *  *   * *  *  *  *  *  *  *  *
          *** * *   ** *  * *  * ** *   *   **   *  *  *  *  *  *  *  *
        * * * *     **   **   *****    *    *** *  *  *  *  *  *  *  *  *
      *** * *   * * ***  ***  *   *****  ** * *   *  *  *  *  *  *  *  *  *
    * * * *    ** *** *  * * *    *   *  ** *    *  *  *  *  *  *  *  *  *  *
  *** * *   ** ** * *   ** *   ***   *   **   ***  *  *  *  *  *  *  *  *  *  *
* * * *     ** ** *     **     * ** *    ***  * * *  *  *  *  *  *  *  *  *  *
* * *   * * ** **   * * **** ******   ** * * ** *   *  *  *  *  *  *  *  *  *
* *    ** **** *** ** ***  * *    **  ** * ****    *  *  *  *  *  *  *  *  *  *
*   ** ** *  * * * ** * * **   ** **  ** ***  *****  *  *  *  *  *  *  *  *  *
    ** **   ** * **** * *****  ** **  ** * *  *   * *  *  *  *  *  *  *  *  *
* * ** ***  ** ***  * ***   *  ** **  ** *   *   **   *  *  *  *  *  *  *  *  *
* **** * *  ** * * **** ** *   ** **  **    *    *** *  *  *  *  *  *  *  *  *
* *  * *    ** * ***  * **     ** **  ******  ** * *   *  *  *  *  *  *  *  *
*   **   ** ** *** * ******* * ** **  *    *  ** *    *  *  *  *  *  *  *  *  *
**  ***  ** ** * * ***     * **** ** *  ***   **   ***  *  *  *  *  *  *  *  *
 *  * *  ** ** * *** *** *****  * **    * **  ***  * * *  *  *  *  *  *  *  *
   **    ** ** *** * * * *   * *************  * * ** *   *  *  *  *  *  *  *  *
   ***** ** ** * * * * *    ****           * ** ****    *  *  *  *  *  *  *  *
 * *   * ** ** * * * *   ** *  ***       ****** *  *****  *  *  *  *  *  *  *
 *    ***** ** * * *     **    * ***   * *    *    *   * *  *  *  *  *  *  *  *
   ** *   * ** * *   * * ********* ** **   ***  ***   **   *  *  *  *  *  *  *
*  **    ***** *    ** ***       * ** ***  * *  * **  *** *  *  *  *  *  *  *
*  ***** *   *   ** ** * ***   ****** * * **   *****  * *   *  *  *  *  *  *  *
   *   *    *    ** ** *** **  *    * * *****  *   * **    *  *  *  *  *  *  *
***   *  ***  ** ** ** * * ** *  **** ***   * *   *********  *  *  *  *  *  *
  ** *   * *  ** ** ** * ****    *  * * ** **     *       * *  *  *  *  *  *  *
  **    **    ** ** ** ***  *****  ** **** **** **  *   ***   *  *  *  *  *  *
* ***** ***** ** ** ** * *  *   *  ** *  * *  * ** *    * ** *  *  *  *  *  *
***   * *   * ** ** ** *   *   *   **   **   *****   *******   *  *  *  *  *  *
* ** **    ***** ** **    *   *    ***  ***  *   **  *     ** *  *  *  *  *  *
* ** ***** *   * ** ******   *  ** * *  * * *    ** *  * * **   *  *  *  *  *
**** *   *    ***** *    ** *   ** *   ** *   ** **   ** ***** *  *  *  *  *  *
   *    *  ** *   *   ** **     **     **     ** ***  ** *   *   *  *  *  *  *
  *  ***   **    *    ** **** * **** * **** * ** * *  **    *   *  *  *  *  *
 *   * **  ******  ** ** *  * ***  * ***  * **** *    ******   *  *  *  *  *  *
*   *****  *    *  ** **   **** * **** * ****  *   ** *    ** *  *  *  *  *  *
    *   * *  ***   ** ***  *  * ***  * ***  * *    **   ** **   *  *  *  *  *
* **   **    * **  ** * * *  **** * **** * **   ** ***  ** *** *  *  *  *  *  *
* ***  **********  ** * *    *  * ***  * *****  ** * *  ** * *   *  *  *  *  *
*** *  *        *  ** *   ***  **** * ****   *  ** *    ** *    *  *  *  *  *
* *   *  *    **   **     * *  *  * ***  ** *   **   ** **   ***  *  *  *  *  *
*    *  *  ** ***  **** ***   *  **** *  **     ***  ** ***  * * *  *  *  *  *
  ***  *   ** * *  *  * * ** *   *  *    **** * * *  ** * * ** *   *  *  *  *
  * * *    ** *   *  ** ****    *  *  ** *  * * *    ** * ****    *  *  *  *  *
*** *   ** **    *   ** *  *****  *   **   ** *   ** ** ***  *****  *  *  *  *
* *     ** ******    **    *   * *    ***  **     ** ** * *  *   * *  *  *  *
*   * * ** *    **** ******   **   ** * *  **** * ** ** *   *   **   *  *  *  *
   ** ****   ** *  * *    **  ***  ** *    *  * **** **    *    *** *  *  *  *
   ** *  **  **   **   ** **  * *  **   ***  ****  * ******  ** * *   *  *  *
** **    **  ***  ***  ** ** **    ***  * *  *  * ****    *  ** *    *  *  *  *
** ***** **  * *  * *  ** ** ***** * * **   *  ****  *****   **   ***  *  *  *
** *   * ** **   **    ** ** *   * * ***** *   *  *  *   **  ***  * * *  *  *
**    ***** ***  ***** ** **    ** ***   *    *  *  *    **  * * ** *   *  *  *
***** *   * * *  *   * ** ***** ** * ** *  ***  *  *  ** ** ** ****    *  *  *
*   *    ** *   *   ***** *   * ** ****    * * *  *   ** ** ** *  *****  *  *
   *  ** **    *    *   *    ***** *  ****** *   *    ** ** **    *   * *  *  *
***   ** ******  ***   *  ** *   *    *    *    *  ** ** ** ******   **   *  *
  **  ** *    *  * ** *   **    *  ***  ***  ***   ** ** ** *    **  *** *  *
* **  **   ***  *****     ******   * *  * *  * **  ** ** **   ** **  * *   *  *
* **  ***  * *  *   *** * *    ** **   **   *****  ** ** ***  ** ** **    *  *
* **  * * **   *    * * *   ** ** ***  ***  *   *  ** ** * *  ** ** ******  *
* ** ** ***** *  **** *     ** ** * *  * * *   *   ** ** *    ** ** *    * *  *
* ** ** *   *    *  *   * * ** ** *   ** *    *    ** **   ** ** **   ****   *
* ** **    *  ***  *   ** **** **     **   ***  ** ** ***  ** ** ***  *  ** *
* ** ******   * * *    ** *  * **** * ***  * *  ** ** * *  ** ** * * *   **   *
* ** *    ** ** *   ** **   ****  * *** * **    ** ** *    ** ** * *     *** *
* **   ** ** **     ** ***  *  * **** * ******* ** **   ** ** ** *   * * * *
* ***  ** ** **** * ** * * *  ****  * ***     * ** ***  ** ** **    ** * *    *
* * *  ** ** *  * **** * *    *  * **** *** ****** * *  ** ** ***** ** *   ***
* *    ** **   ****  * *   ***  ****  * * * *    * *    ** ** *   * **     * *
*   ** ** ***  *  * **     * *  *  * ** * *   ****   ** ** **    ******* *** *
**  ** ** * * *  ******* ***   *  ***** *     *  **  ** ** ***** *     * * *
 *  ** ** * *    *     * * ** *   *   *   * **   **  ** ** *   *   * *** *   **
    ** ** *   ***  * *** ****    *   *   ******  **  ** **    *   **** *     *
 ** ** **     * * **** * *  *****   *    *    *  **  ** ******    *  *   * ***
 ** ** **** *** ***  * *    *   ** *  ***  ***   **  ** *    *****  *   **** *
 ** ** *  * * * * * **   ***    **    * *  * **  **  **   ** *   * *    *  *
 ** **   ** * * * *****  * **** *******   *****  **  ***  **    **   ***  *
 ** ***  ** * * ***   * ****  * *     **  *   *  **  * *  ***** ***  * * *  ***
 ** * *  ** * *** ** ****  * **   * * ** *   *   ** **    *   * * * ** *    *
 ** *    ** *** * ** *  * ****** ** ****    *    ** ******   ** * ****   ***  *
 **   ** ** * * ****   ****    * ** *  *****  ** ** *    **  ** ***  **  * * *
 ***  ** ** * ***  **  *  *********    *   *  ** **   ** **  ** * *  ** ** *
 * *  ** ** *** *  ** *   *       *****   *   ** ***  ** **  ** *    ** **   **
 *    ** ** * *    **    *  *   * *   ** *    ** * *  ** **  **   ** ** ***  **
   end


//seed 81563213/////////////////
Enter Rule (0 - 4294967295): 81563213
   start
                                        *
**************************************   * ************************************
                                    * *  **
**********************************  ** *  ** **********************************
                                * *  ** *  *
******************************  ** *  ** ** * *******************************
                            * *  ** *  *  ** *                             * *
* ************************  ** *  ** ** *  ** * *************************  ** *
 *                      * *  ** *  *  ** *  ** *                       * *  **
* * ******************  ** *  ** ** *  ** *  ** * *******************  ** *  **
** *                * *  ** *  *  ** *  ** *  ** *                 * *  ** *  *
 ** * ************  ** *  ** ** *  ** *  ** *  ** * *************  ** *  ** *
  ** *          * *  ** *  *  ** *  ** *  ** *  ** *           * *  ** *  ** *
   ** * ******  ** *  ** ** *  ** *  ** *  ** *  ** * *******  ** *  ** *  ** *
*   ** *    * *  ** *  *  ** *  ** *  ** *  ** *  ** *     * *  ** *  ** *  **
 *   ** *   ** *  ** ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  ** *  **
* *   ** *   ** *  *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  ** *  *
** *   ** *   ** ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  ** *
 ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  ** *
  ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  ** *
   ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  **
    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  **
*    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *  *
**    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *
 **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *
  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  ** *
*  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  **
 *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  **
* *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *  *
** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *
 ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *
  ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  ** *
   ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  **
    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  **
*    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *  *
**    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *
 **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *
  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** * *
*  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** *
 *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  ** *
* *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  **
** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  **
 ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *  *
  ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *
   ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *
    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  ** *
*    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  **
**    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  **
 **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *  *
  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *
*  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *
 *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  ** *
* *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  **
** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  **
 ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *  *
  ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *
   ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *
    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  ** *
*    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  **
**    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  **
 **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *  *
  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *
*  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *
 *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  ** *
* *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  **
** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  **
 ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *  *
  ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *
   ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *
    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  ** *
*    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  **
**    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  **
 **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *  *
  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *
*  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *
 *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  ** *
* *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  **
** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  **
 ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *  *
  ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *
   ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *
    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *   *
*    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *
**    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *
 **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *
  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   ** *
*  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   **
 *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   **
* *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *   *
** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *
 ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *
  ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *
   ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *
    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    **
*    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    **
**    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    *
 **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **
  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **
*  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **
 *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **    ** *  **
   end


*/